<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>安装thrift并使用python3驱动Hbase</title>
      <link href="/2019/02/11/3/"/>
      <url>/2019/02/11/3/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>做比赛的过程中需要用到python去驱动hadoop的那一些东西，要安装thrift。因为按照版本不同等等原因，按照网上别人博客的教程配置并不能成功。经过自己处理问题之后将我自己的安装过程记录下来，作为自己的笔记以及让队伍其他成员使用。</p><p>这份博客可以有效解决网上比较常见的python3无法驱动hbase-thrift的问题（直接pip3 install hbase-thrift，就马上使用的话，在import的时候会爆出语法错误，因为python目录下site-packages/hbase/Hbase.py这个文件默认是用python2语法编写的，不兼容python3 ）。</p><p>网上也有人上传了修改过的Hbase.py文件，但是要么就是收钱，要么就是链接失效，甚至千辛万苦弄到手往往还不能成功跑起来。</p><p>我找到的解决方案就是自己编译安装thrift这个软件，然后用thrift在自己本机上重新生成一遍Hbase.py。这样做可以完美的在自己机子上用python3驱动Hbase。</p><p>如果有不是很熟悉hadoop的新人看到我这篇文章的话，请注意，我自己安装的thrift和Hbase安装文件夹下面自带的thrift服务是不一样的。前者是用来给客户端生成映射文件，后者是用来开启网络服务的。可以简单的认为一个工作在客户端，一个工作在服务端。如果只需要使用python2的话，不需要前者也可以正常驱动Hbase。因为pip下载下来的映射文件本身就是正确的。</p><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>这里使用的是ubuntu16.04虚拟机，崭新的系统，除了安装hadoop、Hbase、Hive、mysql以外并未额外安装其他软件</p><p>hadoop安装目录：/usr/local/hadoop</p><p>Hbase安装目录：/usr/local/hbase</p><p>Hbase源码包解压后的路径：/home/hadoop/Desktop/hbase-2.0.4</p><p>虚拟机用户名：hadoop</p><p>从官网download板块那里下载文件，我用的是0.12.0版本 <a href="http://thrift.apache.org" target="_blank" rel="noopener">apache thrift官网</a></p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>首先按照官网的最新文档进行依赖的安装，网上那些教程安装的东西不太一样，在编译0.12.0版本thrift的时候会报错说缺东西<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install automake bison flex g++ git libboost-all-dev libevent-dev libssl-dev libtool make pkg-config</span><br></pre></td></tr></table></figure></p><p>因为需要设置python支持（废话，不设置的话，怎么用python驱动），如果不安装这些，在编译安装的时候会提示找不到python.h</p><p>官网上说，如果要添加python支持，需要装上这些。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-all python-all-dev python-all-dbg</span><br></pre></td></tr></table></figure><p>实际上在我的ubuntu上面，光是执行上面这条并不够，还要再加一句。否则还是会爆红，说找不到python.h</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install  python3.5-dev</span><br></pre></td></tr></table></figure><p>如果已经装过python2和python3对应的pip，那么上面这两步似乎可以省略，会提示这些软件已经存在了</p><p>安装完依赖之后主要检查一下这两个目录里面有没有 python.h这个文件（两个目录都要有）<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls /usr/include/python2.7</span><br><span class="line">ls /usr/include/python3.5</span><br></pre></td></tr></table></figure></p><h2 id="编译安装软件"><a href="#编译安装软件" class="headerlink" title="编译安装软件"></a>编译安装软件</h2><p>接下来是正常的软件编译安装过程，贴这个代码主要是让你们看看configure参数<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf thrift-0.12.0.tar.gz </span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> thrift-0.12.0/</span><br><span class="line"></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/thrift --with-cpp --with-boost --with-python --without-csharp --with-java --without-erlang --without-perl --with-php --without-php_extension --without-ruby --without-haskell --without-go</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></p><p>正常情况下应该不会爆红的，如果编译或者安装的时候爆红，自行想办法处理</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>安装pip，并使用pip安装两个模块，其中最容易出问题的是hbase-thrift</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python3-pip</span><br><span class="line">pip3 install thrift</span><br><span class="line">pip3 install hbase-thrift</span><br></pre></td></tr></table></figure><p>解压hadoop的源码包<br>我是解压到了这个目录<br><img src="http://120.24.1.93/blogimg/3/547_0.png" alt="547_0.png"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Desktop/hbase-2.0.4/hbase-thrift/src/main/resources/org</span><br><span class="line">/apache/hadoop/hbase/thrift</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/thrift/bin/thrift -gen py Hbase.thrift</span><br></pre></td></tr></table></figure><p>会得到一个gen-py文件夹，里面有个文件夹叫hbase，用它去替换你pip3安装的那个hbase-thrift里面的hbase文件夹</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rm -r  /home/hadoop/.<span class="built_in">local</span>/lib/python3.5/site-packages/hbase</span><br><span class="line"></span><br><span class="line">cp -r ~/Desktop/hbase-2.0.4/hbase-thrift/src/main/resources/</span><br><span class="line">org/apache/hadoop/hbase/thrift/gen-py/hbase /home/hadoop/.<span class="built_in">local</span>/lib/python3.5/site-packages/</span><br></pre></td></tr></table></figure><p>如下图所示，尝试导入一下这个库，import成功就没问题了<br><img src="http://120.24.1.93/blogimg/3/549_0.png" alt="549_0.png"></p><p>尝试用python驱动一下看看，在这之前要先把hbase启动起来</p><p>启动hadoop<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-all.sh</span><br></pre></td></tr></table></figure></p><p>启动Hbase<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-hbase.sh</span><br></pre></td></tr></table></figure></p><p>启动Hbase的thrift服务<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hbase-daemon.sh start thrift</span><br></pre></td></tr></table></figure></p><p>上面这几个脚本我是添加过环境变量的，使用的时候不需要加路径，如果没添加环境变量，请自行根据安装目录补全路径来运行，如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/hadoop/sbin/start-all.sh</span><br><span class="line">/usr/<span class="built_in">local</span>/hbase/bin/start-hbase.sh</span><br><span class="line">/usr/<span class="built_in">local</span>/hbase/bin/hbase-daemon.sh start thrift</span><br></pre></td></tr></table></figure><p>所有服务都启动完成之后，编写一段python代码，运行它</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> thrift.transport <span class="keyword">import</span> TSocket,TTransport</span><br><span class="line"><span class="keyword">from</span> thrift.protocol <span class="keyword">import</span> TBinaryProtocol</span><br><span class="line"><span class="keyword">from</span> hbase <span class="keyword">import</span> Hbase</span><br><span class="line"></span><br><span class="line"><span class="comment"># thrift默认端口是9090</span></span><br><span class="line">socket = TSocket.TSocket(<span class="string">'127.0.0.1'</span>,<span class="number">9090</span>)</span><br><span class="line">socket.setTimeout(<span class="number">5000</span>)</span><br><span class="line"></span><br><span class="line">transport = TTransport.TBufferedTransport(socket)</span><br><span class="line">protocol = TBinaryProtocol.TBinaryProtocol(transport)</span><br><span class="line"></span><br><span class="line">client = Hbase.Client(protocol)</span><br><span class="line">socket.open()</span><br><span class="line"></span><br><span class="line">print(client.getTableNames())  <span class="comment"># 获取当前所有的表名</span></span><br></pre></td></tr></table></figure><p>这段demo代码是从别人的博客抄过来的，原文地址<br><a href="https://blog.csdn.net/luanpeng825485697/article/details/81048468" target="_blank" rel="noopener">https://blog.csdn.net/luanpeng825485697/article/details/81048468</a></p><p>运行结束之后程序输出了一个空的列表<br><img src="http://120.24.1.93/blogimg/3/551_0.png" alt="551_0.png"></p><p>进入hbase shell，用Hbase的语句创建一个表</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hbase shell</span><br><span class="line">hbase(main):002:0&gt; create <span class="string">'student'</span>,<span class="string">'Sname'</span>,<span class="string">'Ssex'</span>,<span class="string">'Sage'</span>,<span class="string">'Sdept'</span>,<span class="string">'course'</span></span><br></pre></td></tr></table></figure><p>再运行一遍python代码可以观察得出，能成功新创建的表名了</p><p><img src="http://120.24.1.93/blogimg/3/553_0.png" alt="553_0.png"></p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hbase </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对几个微信公众号2018年到现在所发表爬虫文章的简单整理</title>
      <link href="/2019/02/10/0002/"/>
      <url>/2019/02/10/0002/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为这阵子做某个小项目的原因，需要了解一下现在的爬虫玩家都喜欢爬哪些网站。就趁着无聊的时候打开微信，挑选了几个经常发爬虫文章的公众号，将它们从2018年1月至今的爬虫文章都收集了一下，并做个简单的分类，用来给我自己和需要的同学作为参考。</p><p>之所以不提供更多的数量，有三个原因：</p><ul><li>只需要大概做个参考，不需要太多数量</li><li>比较新的文章对我而言更有参考意义，有时候需要借鉴爬虫的代码，过旧的文章可能代码会失效</li><li>个人水平比较菜，一时半会儿折腾不出爬取公众号的爬虫</li></ul><h2 id="影视"><a href="#影视" class="headerlink" title="影视"></a>影视</h2><p><a href="http://url.cn/51H9glZ" target="_blank" rel="noopener"> 我爬取豆瓣影评，告诉你《复仇者联盟3》在讲什么？（内附源码） </a></p><p><a href="http://url.cn/5o31Qtp" target="_blank" rel="noopener">《邪不压正》到底怎么样？我爬取了上万条网友评论进行分析  </a></p><p><a href="http://url.cn/5deGHsk" target="_blank" rel="noopener"> 3天9亿！我爬取上万条评论解读《西虹市首富》并预测票房 </a></p><p><a href="http://url.cn/5fD2uNQ" target="_blank" rel="noopener"> 用Python解读分析《爱情公寓》电影版 </a></p><p><a href="https://url.cn/51kDwO6" target="_blank" rel="noopener"> 数十万网友点评：开心麻花再差，也强过张艺谋和李易峰？ </a></p><p><a href="http://url.cn/5aZ1IhA" target="_blank" rel="noopener"> 用Python分析豆瓣，评分最低的演员原来是他 </a></p><p><a href="http://url.cn/5KtTkD4" target="_blank" rel="noopener"> 多种方法爬取猫眼电影并分析（附代码） </a></p><p><a href="http://url.cn/5m2gNzx" target="_blank" rel="noopener">抖音小姐姐视频爬虫  </a></p><p><a href="http://url.cn/5vl7hbI" target="_blank" rel="noopener"> Python数据可视化：2018年电影分析 </a></p><p><a href="http://url.cn/5BVyxEt" target="_blank" rel="noopener"> 我分析了B站的弹幕，看到底啥是佩奇 </a></p><p><a href="http://url.cn/5Pe6wYH" target="_blank" rel="noopener"> 170行代码爬取《白蛇：缘起》短评数据 </a></p><p><a href="http://url.cn/53YgQ1e" target="_blank" rel="noopener"> 用Python解读最值得期待的春节档影片是…… </a></p><p><a href="http://url.cn/5W5Vwfw" target="_blank" rel="noopener"> 用Python全自动下载抖音视频！ </a></p><p><a href="http://url.cn/5XTfkps" target="_blank" rel="noopener"> 爬取了 48048 条评论数据，解读 9.3 分的《毒液》是否值得一看？ </a></p><p><a href="http://url.cn/53ah1DM" target="_blank" rel="noopener"> 11万部影视作品揭秘，掌握过半GRE单词，居然只需看懂20部电影？ </a></p><p><a href="http://url.cn/5RnOaQ1" target="_blank" rel="noopener">手把手教你用Python分析豆瓣电影——以《我不是药神》《邪不压正》为例  </a></p><p><a href="http://url.cn/51cHlLc" target="_blank" rel="noopener"> 使用 Python 分析《我不是药神》豆瓣电影短评 </a></p><p><a href="http://url.cn/5fiIXFn" target="_blank" rel="noopener">  用Python来看3天破10亿的《我不是药神》到底神在哪？   </a></p><p><a href="http://url.cn/5ejD71I" target="_blank" rel="noopener">  用Python写一个抖音漂亮小姐姐发掘器（附代码教程）   </a></p><p><a href="http://url.cn/5Aqha6Z" target="_blank" rel="noopener">   你还在付费爱奇艺VIP？神级程序员教你用Python任意下！  </a></p><p><a href="http://url.cn/569TZCA" target="_blank" rel="noopener">  Python 告诉你绝不知道的 1983-2018 春晚   </a></p><p><a href="http://url.cn/5Y7QLsb" target="_blank" rel="noopener">   史上最强春节档来袭！Python 解读哪部影片值得一看？  </a></p><p><a href="http://url.cn/5U6lTU9" target="_blank" rel="noopener">  春晚鬼畜 B 站日排行最高，赵本山：我的时代还没有结束！   </a></p><p><a href="http://url.cn/53mi3PL" target="_blank" rel="noopener">   上映 10 天，票房就突破 10 亿的《海王》真的有那么好看？  </a></p><p><a href="http://url.cn/5oR1z9Q" target="_blank" rel="noopener">   Python 爬取爱奇艺腾讯视频 250,000 条数据分析为什么李诞不值得了？  </a></p><p><a href="http://url.cn/5kx0aA8" target="_blank" rel="noopener">  Python 爬取爱奇艺 52432 条数据分析谁才是《奇葩说》的焦点人物？   </a></p><p><a href="http://url.cn/5Vski1N" target="_blank" rel="noopener"> Python 爬取猫眼数据分析《无名之辈》为何能逆袭成黑马？    </a></p><p><a href="http://url.cn/5MADDfs" target="_blank" rel="noopener">  Python 爬取 B 站数据分析，宋智孝李光洙谁最受中国粉丝喜爱  </a></p><p><a href="http://url.cn/5ko2jc8" target="_blank" rel="noopener">   纵观 30 年 5000 多部国产电视剧，豆瓣评分最低的演员原来是……  </a></p><p><a href="http://url.cn/53YVIbG" target="_blank" rel="noopener">  爬取了 B 站上的 17398 条评论，分析这部二次元番剧为何受到技术宅的追捧？   </a></p><p><a href="http://url.cn/5YKJK4K" target="_blank" rel="noopener">   爬取了《悲伤逆流成河》15195 条猫眼数据，满分好评背后靠的是什么？  </a></p><p><a href="http://url.cn/5e9EIzI" target="_blank" rel="noopener">  用 Python 爬取 500 条豆瓣影评，看看《蚁人2》是否有看点？   </a></p><p><a href="http://url.cn/5LUFRb6" target="_blank" rel="noopener">  分析日播放量超 6 亿的《延禧攻略》，看爱奇艺腾讯视频谁胜谁败   </a></p><p><a href="http://url.cn/5q7IXwu" target="_blank" rel="noopener">  Python 爬取猫眼千页评论，分析《狄仁杰之四大天王》是否值得一看   </a></p><p><a href="http://url.cn/5cbjlv2" target="_blank" rel="noopener"> 程序员用Python分析徐峥，竟研究出《我不是药神》30亿票房真正秘诀！    </a></p><p><a href="http://url.cn/5eyZO9c" target="_blank" rel="noopener">  Python 告诉你绝不知道的1983-2018 春晚   </a></p><p><a href="http://url.cn/5agYQBb" target="_blank" rel="noopener"> Python 分析《爱情公寓》电影，让我十年情怀一瞬间都喂了狗 </a></p><h2 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h2><p><a href="http://url.cn/5T8BJji" target="_blank" rel="noopener"> 用Python爬取陈奕迅新歌《我们》10万条评论的新发现 </a></p><p><a href="http://url.cn/52SQ10x" target="_blank" rel="noopener"> 爬取网易云音乐单曲下的所有评论 </a></p><p><a href="http://url.cn/5RuibFs" target="_blank" rel="noopener"> 用Python爬取中国新说唱歌曲信息 </a></p><p><a href="http://url.cn/5c2gFCr" target="_blank" rel="noopener">网易云音乐歌曲评论爬虫（附源码）  </a></p><p><a href="http://url.cn/5urzbiL" target="_blank" rel="noopener">  爬取了陈奕迅新歌《我们》10万条评论数据发现：原来，有些人只适合遇见   </a></p><p><a href="http://url.cn/5DsNR1P" target="_blank" rel="noopener">  爬取网易云音乐的评论后，竟有这种发现！   </a></p><p><a href="http://url.cn/5Rue0Ok" target="_blank" rel="noopener">  如何用 Python 爬取网易云音乐的 10w+ 评论？附详细代码解读   </a></p><p><a href="http://url.cn/5BGLFAa" target="_blank" rel="noopener">   爬取了陈奕迅新歌《我们》10万条评论数据发现：原来，有些人只适合遇见  </a></p><p><a href="http://url.cn/59rXpnU" target="_blank" rel="noopener">   Skr！如何用 Python 爬取中国新说唱热门歌曲？  </a></p><h2 id="文学"><a href="#文学" class="headerlink" title="文学"></a>文学</h2><p><a href="http://url.cn/5WtGEkE" target="_blank" rel="noopener"> Python自然语言处理分析倚天屠龙记 </a></p><p><a href="http://url.cn/5XEJXeJ" target="_blank" rel="noopener"> 用文本挖掘剖析近5万首《全唐诗》 </a></p><p><a href="http://url.cn/5JShKs7" target="_blank" rel="noopener"> 用Python分析《斗破苍穹》 </a></p><p><a href="http://url.cn/5b1FJoi" target="_blank" rel="noopener">  Python爬虫实战：爬取全站小说排行榜   </a></p><p><a href="http://url.cn/5OWU9AN" target="_blank" rel="noopener">   用 Python 分析《斗破苍穹》，分析其究竟是烂片无疑还是沧海遗珠？  </a></p><h2 id="房价"><a href="#房价" class="headerlink" title="房价"></a>房价</h2><p><a href="http://url.cn/5liCnl3" target="_blank" rel="noopener"> 用Python分析北京二手房房价 </a></p><p><a href="http://url.cn/5BSaf6Z" target="_blank" rel="noopener">   爬取了 31502 条北京自如租房数据，看看是否居者有其屋？  </a></p><p><a href="http://url.cn/5KReaPs" target="_blank" rel="noopener">   Python 爬取了 1.7 万条房产数据，告诉你深圳的生存压力究竟有多大！  </a></p><p><a href="http://url.cn/5Kj9y9x" target="_blank" rel="noopener">   爬取两万多条租房数据，算算在广州你能「活到」第几集？  </a></p><p><a href="http://url.cn/56hg1rF" target="_blank" rel="noopener"> 北京房租大涨？6个维度，数万条数据帮你揭穿 </a></p><h2 id="职位"><a href="#职位" class="headerlink" title="职位"></a>职位</h2><p><a href="http://url.cn/5VNWHMv" target="_blank" rel="noopener"> Python拉勾网数据采集与可视化 </a></p><p><a href="http://url.cn/5hOR1Wn" target="_blank" rel="noopener">用爬虫分析互联网大数据行业薪资情况  </a></p><p><a href="http://url.cn/50p4yGP" target="_blank" rel="noopener">用Python给互联网公司打分，你在的公司几分？  </a></p><p><a href="http://url.cn/5NPzZug" target="_blank" rel="noopener"> 10行代码爬取全国所有A股/港股/新三板上市公司信息 </a></p><p><a href="http://url.cn/5lxWC5c" target="_blank" rel="noopener">  Python 爬取 4027 条脉脉职言，解读互联网人的苦与难！   </a></p><p><a href="http://url.cn/5Q0Qoh0" target="_blank" rel="noopener">  Python爬取历年招聘数据，告诉你如何成为备受追捧的数据分析工程师！   </a></p><p><a href="http://url.cn/5LzIlaw" target="_blank" rel="noopener">   用 Python 爬了 10 万条软件测试工程师信息有这些发现！  </a></p><p><a href="http://url.cn/5rIj5Vj" target="_blank" rel="noopener">  用 Python 爬取 7 万运营人画像有这些重大发现！  </a></p><p><a href="https://mp.weixin.qq.com/s/b_JL4Cb3-kdzUDijxp7RYw" target="_blank" rel="noopener">  分析了 160 多万个招聘职位，竟发现……   </a></p><h2 id="社交平台"><a href="#社交平台" class="headerlink" title="社交平台"></a>社交平台</h2><p><a href="http://url.cn/5R9i5bV" target="_blank" rel="noopener"> 用Python爬取知乎上关于程序员的神回复 </a></p><p><a href="http://url.cn/5GnfXYK" target="_blank" rel="noopener"> Python抓取分析“创造101 ”菊姐微博 </a></p><p><a href="http://url.cn/5b4s7di" target="_blank" rel="noopener"> Python 3.6实现单博主微博文本、图片及热评爬取 </a></p><p><a href="http://url.cn/5a0xjRc" target="_blank" rel="noopener"> 用Python对用户评论典型意见进行数据挖掘 </a></p><p><a href="http://url.cn/5DfULQE" target="_blank" rel="noopener"> 60行Python代码爬取知乎神回复 </a></p><p><a href="http://url.cn/5uyPyPn" target="_blank" rel="noopener">  一小时爬千万数据的新浪微博爬虫   </a></p><p><a href="http://url.cn/5GnRhhe" target="_blank" rel="noopener"> 微信公众号爬虫weixin_crawler开源啦 </a></p><p><a href="http://url.cn/52j3380" target="_blank" rel="noopener">  基于Python实现微信公众号爬虫进行数据分析   </a></p><p><a href="http://url.cn/5zYTBZc" target="_blank" rel="noopener">   Python 爬取 6000 篇文章分析 CSDN 是如何进入微信 500 强的  </a></p><p><a href="http://url.cn/5IqYTAA" target="_blank" rel="noopener">   我扒了 6730 个微信用户数据，得出了这些结论……  </a></p><p><a href="http://url.cn/5LutagB" target="_blank" rel="noopener">  如何用 Python 测出你和微信好友的亲密程度？   </a></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><a href="http://url.cn/5d7lx2O" target="_blank" rel="noopener"> 用Python爬取分析全国旅游数据 </a></p><p><a href="http://url.cn/5Ppqy3c" target="_blank" rel="noopener"> Python数据可视化：2018年北上广深空气质量分析（附完整代码） </a></p><p><a href="http://url.cn/5cuVvxQ" target="_blank" rel="noopener"> 金州勇士4年3冠的成功秘诀！Python数据可视化分析告诉你答案 </a></p><p><a href="http://url.cn/53GsZu7" target="_blank" rel="noopener"> 我爬取分析美团网，原来北京上海Top10美食是它们 </a></p><p><a href="http://url.cn/5hhiuRW" target="_blank" rel="noopener"> 利用robots.txt快速抓取网站的小窍门 </a></p><p><a href="http://url.cn/59fQPNo" target="_blank" rel="noopener"> Python 分析新垣结衣高圆圆佟丽娅，程序员最想娶的女星竟然是… </a></p><p><a href="http://url.cn/5Ba6YQF" target="_blank" rel="noopener"> 点评网的反爬再也不是烦恼 </a></p><p><a href="http://url.cn/5wOiE1D" target="_blank" rel="noopener"> 写文章不会起标题？爬取虎嗅5万篇文章告诉你 </a></p><p><a href="http://url.cn/5OlRMID" target="_blank" rel="noopener"> Python数据分析实战 | 月饼之王花落谁手？ </a></p><p><a href="http://url.cn/5ZRxO9L" target="_blank" rel="noopener"> 用Python分析了20万场吃鸡数据 </a></p><p><a href="http://url.cn/5QJS3AC" target="_blank" rel="noopener"> 我用Python爬取了14年所有的福彩3D信息，彩民们，只能帮你们到这了 </a></p><p><a href="http://url.cn/5ahxvXK" target="_blank" rel="noopener">  用 Python 分析4W场球赛，2018 世界杯冠军竟是……   </a></p><p><a href="http://url.cn/55zdgmA" target="_blank" rel="noopener">   用Python来统计知识星球打卡作业  </a></p><p><a href="http://url.cn/5sDS5zo" target="_blank" rel="noopener">  程序媛爬取了 5 个 APP 的 4220 个数据，解读过去的一年到底过得怎么样！   </a></p><p><a href="http://url.cn/5o0LnvK" target="_blank" rel="noopener">   如何基于谷歌的最强 NLP 模型进行影评分析？  </a></p><p><a href="http://url.cn/56jPl3u" target="_blank" rel="noopener">   Python 爬下的必胜客数据背后，藏着什么样的信息？  </a></p><p><a href="http://url.cn/5h4y8AA" target="_blank" rel="noopener">  Python 分析 35 年的考研英语真题词汇，解读孤独的考研大军！   </a></p><p><a href="http://url.cn/5xcmExF" target="_blank" rel="noopener">  用 Python 分析了 1982 场英雄联盟数据，开局前预测游戏对局胜负！   </a></p><p><a href="http://url.cn/5dqwtFf" target="_blank" rel="noopener">   用 Python 分析了 10000 场吃鸡数据，原来吃鸡要这么玩！  </a></p><p><a href="http://url.cn/5yTu8N5" target="_blank" rel="noopener"> 如何用 Python 一键搞定 CET 4 最爱考的 5000 个单词？   </a></p><p><a href="http://url.cn/5GiFDKu" target="_blank" rel="noopener">   分析 120 年的 Kaggle 数据，中国何时站上奥运之巅？  </a></p><p><a href="http://url.cn/5OcJnXZ" target="_blank" rel="noopener">   程序员再花 28 小时分析各省疫苗采购公示数据，竟有这些发现！  </a></p><p><a href="http://url.cn/51onZn2" target="_blank" rel="noopener">   用 Python 爬取了 14 年的福彩 3D 信息！彩民们，只能帮你们到这了  </a></p><p><a href="http://url.cn/5Gy08dG" target="_blank" rel="noopener">  Python 爬取 50 万数据得出最权威、全面的高考志愿填报指南！   </a></p><p><a href="http://url.cn/5b7KqNK" target="_blank" rel="noopener">  如何用 100 行 Python 代码实现新闻爬虫？   </a></p><p><a href="http://url.cn/5b52CgX" target="_blank" rel="noopener"> 一文教你如何用Python预测股票价格    </a></p><p><a href="http://url.cn/5bk21Pl" target="_blank" rel="noopener">  用python分析《三国演义》中的社交网络   </a></p><p><a href="http://url.cn/5hjJmXm" target="_blank" rel="noopener">   Python 爬取大众点评 50 页数据，最好吃的成都火锅竟是它！  </a></p><p><a href="http://url.cn/5B5MxYI" target="_blank" rel="noopener">  Python爬虫&amp;可视化-舌尖上的“小龙虾”  </a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>本博客今天起投入使用</title>
      <link href="/2018/12/04/0001/"/>
      <url>/2018/12/04/0001/</url>
      
        <content type="html"><![CDATA[<p>在未来的一段时间内，我将会把学习和项目中遇到的技术问题及其解决方案撰写成文发到这里，与各位程序员共同分享，也作为我自己的一个笔记。</p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签1 </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>推荐链接</title>
      <link href="/links/index.html"/>
      <url>/links/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    <entry>
      <title>时间轴</title>
      <link href="/timeline/index.html"/>
      <url>/timeline/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    <entry>
      <title>标签云</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
  
</search>
